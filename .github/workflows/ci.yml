name: Create and publish a Docker image

on:
  push:
    branches:
      - main
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  # see https://github.com/game-ci/docker/tags
  BASE_REPO_VERSION: 0.17.0

jobs:
  editor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        unity-version: [2019.4.34f1, 2020.3.27f1, 2021.2.10f1]
        image-os: [ubuntu]
        path: [editor]
        include:
          - unity-version: 2019.4.34f1
            unity-version-changeset: 6a9faed444f2
          - unity-version: 2020.3.27f1
            unity-version-changeset: e759542391ea
          - unity-version: 2021.2.10f1
            unity-version-changeset: ee872746220e

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Dockerfile
        working-directory: ${{ matrix.path }}
        run: |
          wget -O Dockerfile https://raw.githubusercontent.com/game-ci/docker/v${{ env.BASE_REPO_VERSION }}/images/${{ matrix.image-os }}/${{ matrix.path }}/Dockerfile
          patch --verbose --batch --unified Dockerfile Dockerfile.patch
          cat Dockerfile.append >> Dockerfile
          cat Dockerfile

      # Free up some disk space so we don't run out while building the docker image
      - name: Free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf /usr/lib/google-cloud-sdk
          sudo rm -rf /opt/pipx
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          docker rmi $(docker image ls -aq)
          du --max-depth=3 --threshold=100M -h /usr /opt /var 2>/dev/null | sort -hr
          df -h

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Collect metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          flavor: |
            latest=auto
            prefix=${{ matrix.path }}-${{ matrix.image-os }}-${{ matrix.unity-version }}-
            suffix=

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.path }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            module=ios android android-sdk-ndk-tools android-open-jdk
            hubImage=unityci/hub:${{ matrix.image-os }}-${{ env.BASE_REPO_VERSION }}
            baseImage=unityci/base:${{ matrix.image-os }}-${{ env.BASE_REPO_VERSION }}
            version=${{ matrix.unity-version }}
            changeSet=${{ matrix.unity-version-changeSet }}
